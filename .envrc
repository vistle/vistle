# use with direnv: https://github.com/zimbatm/direnv

os=$(uname -s|tr A-Z a-z)
case $(uname -m) in
   i*86) arch=32 ;;
   x86_64|amd64) arch=64 ;;
   *) arch=$(uname -m) ;;
esac

system="${os}${arch}"
case $os in
    freebsd) system="$os" ;;
esac

if [ -n "$PREFIX" -a -d "${PREFIX}" ]; then
    export CMAKE_PREFIX_PATH="${PREFIX}"
    export LD_LIBRARY_PATH="$PREFIX/lib64:$PREFIX/lib:$LD_LIBRARY_PATH"
    host="${PREFIX##*/}"

    if [ -r $HOME/modules-$host.sh ]; then
        . $HOME/modules-$host.sh
    fi
fi

case $os in
    freebsd)
        PATH_add /usr/local/mpi/openmpi/bin
        ;;
esac

mpi=""
if [ "$os" != "darwin" ]; then
    if which mpirun >/dev/null 2>&1; then
        if mpirun -version | grep open-mpi\.org > /dev/null; then
             mpi="-ompi"
        fi
    fi
fi

if [ -z ${MANPATH} ]; then
case $os in
    freebsd)
        export MANPATH="$(manpath)"
        ;;
    *)
        export MANPATH="$(man -w)"
        ;;
esac
fi
path_add MANPATH "$(pwd -P)/3rdparty/IceT/doc/man"

builddir="build-${system}${mpi}"
if [ "$(which icc 2>/dev/null)" != "" ]; then
   builddir="build-icc"
   test -z "${COMPILER}" && COMPILER=intel
fi

if [ "$CRAY_PRGENVGNU" = "loaded" ]; then
   COMPILER=gnu
fi

if [ -z "${COVISEDIR}" -a -d "${HOME}/covise" ]; then
   export COVISEDIR=${HOME}/covise
fi

if [ -z "${COVISEDIR}" ]; then
   if which print_covise_env >/dev/null 2>&1; then
       export COVISEDIR="$(print_covise_env COVISEDIR)" >/dev/null 2>&1
   fi
fi

if [ -n "${COVISEDIR}" ]; then
    . "${COVISEDIR}/.covise.sh"
fi

if [ -n "${VISTLE_FLAVOR}" ]; then
    builddir="${builddir}-${VISTLE_FLAVOR}"
elif [ -s .flavor ]; then
    VISTLE_FLAVOR="$(cat .flavor)"
    builddir="${builddir}-${VISTLE_FLAVOR}"
fi

if [ -f .release ]; then
    builddir="${builddir}-release"
    if [ -n "${ARCHSUFFIX}" -a "${ARCHSUFFIX%opt}" = "${ARCHSUFFIX}" ]; then
        ARCHSUFFIX="${ARCHSUFFIX}opt"
    fi
elif [ -f .debug ]; then
    builddir="${builddir}-debug"
    if [ "${ARCHSUFFIX%opt}" != "${ARCHSUFFIX}" ]; then
        : ARCHSUFFIX="${ARCHSUFFIX%opt}"
    fi
fi
if [ -n "${ARCHSUFFIX}" ]; then
    echo ARCHSUFFIX=$ARCHSUFFIX
    export ARCHSUFFIX
fi

#builddir=build-mvapich

case "$system" in
   darwin64)
   path_add DYLD_LIBRARY_PATH "/usr/local/cuda/lib"
   if [ -n "$COVISEDIR" ]; then
       export EXTERNLIBS="$($COVISEDIR/bin/print_covise_env EXTERNLIBS)"
       #export OSGDIR="${EXTERNLIBS}/openscenegraph"
       #path_add DYLD_LIBRARY_PATH "${OSGDIR}/lib"
       #path_add DYLD_LIBRARY_PATH "${EXTERNLIBS}/xercesc/lib"
       #path_add DYLD_LIBRARY_PATH "${EXTERNLIBS}/embree/lib"
       path_add DYLD_LIBRARY_PATH "${COVISEDIR}/$(${COVISEDIR}/bin/print_covise_env ARCHSUFFIX)/lib"
       path_add DYLD_LIBRARY_PATH "$(${COVISEDIR}/bin/print_covise_env EXTERNLIBS)/ALL/lib"
       path_add DYLD_FRAMEWORK_PATH "$(${COVISEDIR}/bin/print_covise_env EXTERNLIBS)/ALL"
   fi
   path_add DYLD_LIBRARY_PATH "$builddir/lib"
   export VISTLE_DYLD_LIBRARY_PATH="$DYLD_LIBRARY_PATH"
   ;;
   linux64)
   if [ -z "$EXTERNLIBS" ]; then
      extlibs="$(${COVISEDIR}/bin/print_covise_env EXTERNLIBS)"
      if [ -d "$extlibs" ]; then
         export EXTERNLIBS="$extlibs"
      elif [ -d /data/extern_libs ]; then
         export EXTERNLIBS="/data/extern_libs/${ARCHSUFFIX%opt}"
      fi
   fi
   if [ -n "$PREFIX" ]; then
        builddir="build-${host}"
        if [ -n "$COMPILER" ]; then
            builddir="$builddir-$COMPILER"
        fi
    fi

    if [ -n "$EXTERNLIBS" ]; then
        path_add LD_LIBRARY_PATH "$(${COVISEDIR}/bin/print_covise_env EXTERNLIBS)/ALL/lib64"
        path_add LD_LIBRARY_PATH "$(${COVISEDIR}/bin/print_covise_env EXTERNLIBS)/ALL/lib"
    fi
   path_add LD_LIBRARY_PATH "${COVISEDIR}/$(${COVISEDIR}/bin/print_covise_env ARCHSUFFIX)/lib"
   path_add LD_LIBRARY_PATH "${builddir}/lib"
   ;;
   freebsd*)
   if [ -z "$EXTERNLIBS" ]; then
      extlibs="$(${COVISEDIR}/bin/print_covise_env EXTERNLIBS)"
      if [ -d "$extlibs" ]; then
         export EXTERNLIBS="$extlibs"
      elif [ -d /data/extern_libs ]; then
         export EXTERNLIBS="/data/extern_libs/${ARCHSUFFIX%opt}"
      fi
   fi
    if [ -n "$EXTERNLIBS" ]; then
        path_add LD_LIBRARY_PATH "$(${COVISEDIR}/bin/print_covise_env EXTERNLIBS)/ALL/lib"
    fi
   path_add LD_LIBRARY_PATH "${COVISEDIR}/$(${COVISEDIR}/bin/print_covise_env ARCHSUFFIX)/lib"
   path_add LD_LIBRARY_PATH "${builddir}/lib"
   ;;
esac

export VMAKE_BUILD="$builddir"
echo Build: "$builddir"

export COVISEDESTDIR="$(pwd -P)/${builddir}"
export COVISE_PATH="$COVISEDESTDIR:$COVISEDIR"
path_add PYTHON_PATH "${builddir}/lib"
path_add PYTHONPATH "${builddir}/lib"
path_add PYTHON_PATH "${builddir}/share/vistle"
path_add PYTHONPATH "${builddir}/share/vistle"

export ACK_OPTIONS="--ignore-dir=doc"

if test -d "${builddir}/bin"; then
   PATH_add "${builddir}/bin"
fi
