# /usr/bin/env vistle
# this is a Python workflow from Vistle 2025.1-255a6580+

import os

covisedir = os.getenv("COVISEDIR")

MasterHub=getMasterHub()
VistleSession=getVistleSession()
WorkflowConfig=getWorkflowConfig()
uuids = {}
setIntParam(VistleSession, 'archive_compression', 1, True)
applyParameters(VistleSession)



# spawn all local modules
umReadCoviseDirectory1 = spawnAsync(MasterHub, 'ReadCoviseDirectory')
umCOVER2 = spawnAsync(MasterHub, 'COVER')
umIsoSurface3 = spawnAsync(MasterHub, 'IsoSurface')
umDomainSurface4 = spawnAsync(MasterHub, 'DomainSurface')
umCutGeometry5 = spawnAsync(MasterHub, 'CutGeometry')
umCuttingSurface6 = spawnAsync(MasterHub, 'CuttingSurface')
umColor7 = spawnAsync(MasterHub, 'Color')
umTracer8 = spawnAsync(MasterHub, 'Tracer')
umColor9 = spawnAsync(MasterHub, 'Color')
umThicken10 = spawnAsync(MasterHub, 'Thicken')
umToTriangles11 = spawnAsync(MasterHub, 'ToTriangles')
umFlattenTriangles12 = spawnAsync(MasterHub, 'FlattenTriangles')
umToTriangles13 = spawnAsync(MasterHub, 'ToTriangles')

mReadCoviseDirectory1 = waitForSpawn(umReadCoviseDirectory1)
setVectorParam(VistleSession, 'position[1]', -357.0, -325.0)
setStringParam(mReadCoviseDirectory1, 'directory', covisedir + '/share/covise/example-data/tutorial', True)
setStringParam(mReadCoviseDirectory1, 'grid', 'tiny_geo', True)
setStringParam(mReadCoviseDirectory1, 'field0', 'tiny_p', True)
setStringParam(mReadCoviseDirectory1, 'field1', 'tiny_velocity', True)
applyParameters(mReadCoviseDirectory1)

mCOVER2 = waitForSpawn(umCOVER2)
setVectorParam(VistleSession, 'position[2]', -287.75807095544985, 123.66935033118506)
setIntParam(mCOVER2, 'render_mode', 2, True)
setVectorParam(mCOVER2, '_config:plugin/ViewPoint:dynamic:InitialViewPosition', -1.8986904621124268, -122.54523468017578, 19.608436584472656, True)
setVectorParam(mCOVER2, '_config:plugin/ViewPoint:dynamic:InitialViewHpr', 92.23554229736328, -18.80611228942871, 99.60858154296875, True)
setFloatParam(mCOVER2, '_config:plugin/ViewPoint:dynamic:InitialViewScale', 430.5526428222656, True)
applyParameters(mCOVER2)

mIsoSurface3 = waitForSpawn(umIsoSurface3)
setVectorParam(VistleSession, 'position[3]', -300.932259867526, -119.524192904455)
setFloatParam(mIsoSurface3, 'isovalue', 0.0872337818145752, True)
applyParameters(mIsoSurface3)

mDomainSurface4 = waitForSpawn(umDomainSurface4)
setVectorParam(VistleSession, 'position[4]', -481.91624491883715, -208.8645216573958)
setIntParam(mDomainSurface4, 'reuseCoordinates', 1, True)
applyParameters(mDomainSurface4)

mCutGeometry5 = waitForSpawn(umCutGeometry5)
setVectorParam(VistleSession, 'position[5]', -481.07272647818826, -117.2645291735146)
setVectorParam(mCutGeometry5, 'point', -0.16836124658584595, -0.3433360755443573, 0.035327617079019547, True)
setVectorParam(mCutGeometry5, 'vertex', 0.0, 6.123234262925839e-17, -1.0, True)
setFloatParam(mCutGeometry5, 'scalar', -0.035327617079019547, True)
setIntParam(mCutGeometry5, 'flip', 1, True)
applyParameters(mCutGeometry5)

mCuttingSurface6 = waitForSpawn(umCuttingSurface6)
setVectorParam(VistleSession, 'position[6]', -190.43222279332943, -120.36610267561481)
setVectorParam(mCuttingSurface6, 'point', -0.2001001238822937, 0.38458260893821716, 0.004019145388156176, True)
setVectorParam(mCuttingSurface6, 'vertex', 0.0, 6.123234262925839e-17, -1.0, True)
setFloatParam(mCuttingSurface6, 'scalar', -0.004019145388156176, True)
applyParameters(mCuttingSurface6)

mColor7 = waitForSpawn(umColor7)
setVectorParam(VistleSession, 'position[7]', -380.36935831594286, -120.019354323564)
setStringParam(mColor7, 'species', 'tiny_p', True)
setFloatParam(mColor7, 'min', -0.4708384871482849, True)
setFloatParam(mColor7, 'max', 3.7333059310913086, True)
setIntParam(mColor7, 'map', 1, True)
applyParameters(mColor7)

mTracer8 = waitForSpawn(umTracer8)
setVectorParam(VistleSession, 'position[8]', -8.145140880806679, -205.03066127505215)
setVectorParam(mTracer8, 'startpoint1', 0.22845807671546936, -0.11267272382974625, 0.06560740619897842, True)
setVectorParam(mTracer8, 'startpoint2', 0.5221380591392517, -0.08130593597888947, 0.050332531332969666, True)
setIntParam(mTracer8, 'no_startp', 12, True)
setFloatParam(mTracer8, 'trace_len', 11.114994049072266, True)
applyParameters(mTracer8)

mColor9 = waitForSpawn(umColor9)
setVectorParam(VistleSession, 'position[9]', -122.68878333417021, -120.50323517203591)
setStringParam(mColor9, 'species', 'tiny_velocity', True)
setFloatParam(mColor9, 'max', 2.2622992992401123, True)
setIntParam(mColor9, 'map', 6, True)
setIntParam(mColor9, 'steps', 1024, True)
applyParameters(mColor9)

mThicken10 = waitForSpawn(umThicken10)
setVectorParam(VistleSession, 'position[10]', -8.259734386666054, -119.53069179263028)
setFloatParam(mThicken10, 'radius', 0.005, True)
setVectorParam(mThicken10, 'range', 0.002, 0.01, True)
applyParameters(mThicken10)

mToTriangles11 = waitForSpawn(umToTriangles11)
setVectorParam(VistleSession, 'position[11]', -8.338698620064491, -43.495154072903716)

mFlattenTriangles12 = waitForSpawn(umFlattenTriangles12)
setVectorParam(VistleSession, 'position[12]', -480.95965885123513, 32.72903924689554)

mToTriangles13 = waitForSpawn(umToTriangles13)
setVectorParam(VistleSession, 'position[13]', -480.9855987926414, -42.27421468987204)

# all local connections
connect(mReadCoviseDirectory1,'grid_out', mDomainSurface4,'data_in')
connect(mReadCoviseDirectory1,'field0_out', mIsoSurface3,'data_in')
connect(mReadCoviseDirectory1,'field0_out', mIsoSurface3,'mapdata_in')
connect(mReadCoviseDirectory1,'field0_out', mCuttingSurface6,'data_in')
connect(mReadCoviseDirectory1,'field0_out', mColor7,'data_in')
connect(mReadCoviseDirectory1,'field1_out', mTracer8,'data_in0')
connect(mReadCoviseDirectory1,'field1_out', mColor9,'data_in')
connect(mIsoSurface3,'data_out', mCOVER2,'data_in')
connect(mDomainSurface4,'data_out', mCutGeometry5,'grid_in')
connect(mDomainSurface4,'lines_out', mCOVER2,'data_in')
connect(mCutGeometry5,'grid_out', mToTriangles13,'grid_in')
connect(mCuttingSurface6,'data_out', mCOVER2,'data_in')
connect(mColor7,'color_out', mCOVER2,'data_in')
connect(mTracer8,'data_out0', mThicken10,'grid_in')
connect(mColor9,'color_out', mCOVER2,'data_in')
connect(mThicken10,'grid_out', mToTriangles11,'grid_in')
connect(mToTriangles11,'grid_out', mCOVER2,'data_in')
connect(mFlattenTriangles12,'grid_out', mCOVER2,'data_in')
connect(mToTriangles13,'grid_out', mFlattenTriangles12,'grid_in')

# spawn all remote modules

# connections between local and remote
