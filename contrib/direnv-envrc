# use with direnv: https://github.com/zimbatm/direnv
# modify a copy of this file for your installation and symlink it to .envrc in the root of your Vistle checkout

os=$(uname -s|tr A-Z a-z)
case $(uname -m) in
   i*86) arch=32 ;;
   x86_64|amd64) arch=64 ;;
   *) arch=$(uname -m) ;;
esac

if [ "$CMAKE_GENERATOR" = "Ninja" ]; then
    export CMAKE_GENERATOR="Ninja Multi-Config"
fi

mpi=""
libvar=LD_LIBRARY_PATH
case $os in
    freebsd)
        PATH_add /usr/local/mpi/openmpi/bin
        ;;
    darwin)
        libvar=DYLD_LIBRARY_PATH
        ;;
    *)
        if which mpirun >/dev/null 2>&1; then
            if mpirun -version | grep open-mpi\.org > /dev/null; then
                 mpi="-ompi"
            fi
        fi
        ;;
esac

if [ -z ${MANPATH} ]; then
case $os in
    darwin|freebsd)
        export MANPATH="$(manpath)"
        ;;
    *)
        export MANPATH="$(man -w)"
        ;;
esac
fi
path_add MANPATH "$(pwd -P)/3rdparty/IceT/doc/man"

if [ -z "$SPACK_ENV" ]; then
    if [ -e .spack ]; then
        env="$(cat .spack)"
        eval $(spack env activate --sh "$env") && echo
    fi
fi
if [ -n "$SPACK_ENV" ]; then
    if [ -z "$ARCHSUFFIX" ]; then
        env="${SPACK_ENV##*/}"
        export ARCHSUFFIX="spack${env%default}"
    fi
    builddir="build-spack${env%default}"
else
    builddir="build-$os$arch$mpi"
fi

if [ -z "${COVISEDIR}" -a -d "../covise" ]; then
   export COVISEDIR="$(cd ../covise; pwd -P)"
fi
if [ -z "${COVISEDIR}" -a -d "${HOME}/covise" ]; then
   export COVISEDIR=${HOME}/covise
fi
if [ -z "${COVISEDIR}" ]; then
   if which print_covise_env >/dev/null 2>&1; then
       export COVISEDIR="$(print_covise_env COVISEDIR)" >/dev/null 2>&1
   fi
fi
if [ -n "${COVISEDIR}" ]; then
    . "${COVISEDIR}/.covise.sh"
fi

if [ -n "${VISTLE_FLAVOR}" ]; then
    builddir="${builddir}-${VISTLE_FLAVOR}"
elif [ -s .flavor ]; then
    VISTLE_FLAVOR="$(cat .flavor)"
    builddir="${builddir}-${VISTLE_FLAVOR}"
fi

if [ -f .release ]; then
    VISTLE_BUILD_TYPE=Release
    builddir="${builddir}-release"
elif [ -f .debug ]; then
    VISTLE_BUILD_TYPE=Debug
    builddir="${builddir}-debug"
elif [ -f .buildtype ]; then
    VISTLE_BUILD_TYPE="$(cat .buildtype)"
else
    VISTLE_BUILD_TYPE=RelWithDebInfo
fi
export VISTLE_BUILD_TYPE
builddir="build"
case "$VISTLE_BUILD_TYPE" in
Debug|Sanitize)
    if [ "${ARCHSUFFIX%opt}" != "${ARCHSUFFIX}" ]; then
        ARCHSUFFIX="${ARCHSUFFIX%opt}"
    fi
    ;;
RelWithDebInfo|Release|MinSizeRel|RelSanitize|*)
    if [ -n "${ARCHSUFFIX}" -a "${ARCHSUFFIX%opt}" = "${ARCHSUFFIX}" ]; then
        ARCHSUFFIX="${ARCHSUFFIX}opt"
    fi
    ;;
esac

if [ -n "${ARCHSUFFIX}" ]; then
    export ARCHSUFFIX
fi

if [ -n "$COVISEDIR" ]; then
    case "$ARCHSUFFIX" in
        spack*)
        ;;
        *)
            extlibs="$($COVISEDIR/bin/print_covise_env EXTERNLIBS)"
            if [ -n "$extlibs" -a -d "$extlibs" ]; then
                export EXTERNLIBS="$extlibs"
                path_add ${libvar} "${EXTERNLIBS}/ALL/lib"
                if [ -d "${EXTERNLIBS}/ALL/lib64" ]; then
                    path_add ${libvar} "${EXTERNLIBS}/ALL/lib64"
                fi
            fi
        ;;
    esac
    path_add ${libvar} "${COVISEDIR}/${ARCHSUFFIX}/lib"
    path_add ${libvar} "$builddir/lib/$VISTLE_BUILD_TYPE"

    export COVISEDESTDIR="$(pwd -P)/${builddir}"
    export COVISE_PATH="$COVISEDESTDIR:$COVISEDIR"
fi
export ${libvar}

case "$os" in
   darwin*)
       if [ -n "$EXTERNLIBS" -a -d "$EXTERNLIBS"/ALL ]; then
           path_add DYLD_FRAMEWORK_PATH "$(${COVISEDIR}/bin/print_covise_env EXTERNLIBS)/ALL"
           export DYLD_FRAMEWORK_PATH
           export VISTLE_DYLD_FRAMEWORK_PATH="$DYLD_FRAMEWORK_PATH"
       fi
       export VISTLE_DYLD_LIBRARY_PATH="$DYLD_LIBRARY_PATH"
   ;;
esac

export VMAKE_BUILD="$builddir"
echo Build: dir="$builddir, ${ARCHSUFFIX:-no ARCHSUFFIX}, type=$VISTLE_BUILD_TYPE"

path_add PYTHONPATH "${builddir}/lib/$VISTLE_BUILD_TYPE"
path_add PYTHONPATH "${builddir}/share/vistle"
path_add PYTHONPATH "${COVISEDIR}/Python"
path_add PYTHONPATH "${COVISEDIR}/${ARCHSUFFIX}/lib"

PATH_add "${builddir}/bin"
PATH_add "${builddir}/bin/$VISTLE_BUILD_TYPE"
